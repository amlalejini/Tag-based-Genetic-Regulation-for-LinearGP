#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=8:00:00            # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-480
#SBATCH --mem=8G                  # memory required per node - amount of memory (in bytes)
#SBATCH --job-name hamming         # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab

########## Command Lines to Run ##########

DATA_DIR=/mnt/scratch/lalejini/data/sgp-regulation/mut-rate-exps
CONFIG_DIR=/mnt/home/lalejini/devo_ws/signalgp-genetic-regulation/hpcc/mut-rate-exps/configs

##################################
# Setup random seed info
PROBLEM_SEED_OFFSET=5000
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET))

##################################
MATCH_METRIC=hamming
GENERATIONS=5000
SUMMARY_RESOLUTION=100
SNAPSHOT_RESOLUTION=5000
ENV_CYCLES_PER_SIG_RESP=2
EXEC=signalgp-genetic-regulation_match-metric-${MATCH_METRIC}

REPLICATES=30
TREATMENT_ID=0

##################################
# CONDITIONS:
# Tag Mutation rates: 0.001, 0.002, 0.005, 0.0005
# Env responses: 2, 4, 8, 16
ENV_RESPONSES_2__MUT_RATE_001__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_2__MUT_RATE_001__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_2__MUT_RATE_002__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_2__MUT_RATE_002__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_2__MUT_RATE_005__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_2__MUT_RATE_005__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_2__MUT_RATE_0005__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_2__MUT_RATE_0005__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

### ER = 4
ENV_RESPONSES_4__MUT_RATE_001__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_4__MUT_RATE_001__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_4__MUT_RATE_002__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_4__MUT_RATE_002__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_4__MUT_RATE_005__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_4__MUT_RATE_005__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_4__MUT_RATE_0005__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_4__MUT_RATE_0005__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

### ER = 8
ENV_RESPONSES_8__MUT_RATE_001__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_8__MUT_RATE_001__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_8__MUT_RATE_002__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_8__MUT_RATE_002__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_8__MUT_RATE_005__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_8__MUT_RATE_005__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_8__MUT_RATE_0005__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_8__MUT_RATE_0005__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

### ER = 16
ENV_RESPONSES_16__MUT_RATE_001__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_16__MUT_RATE_001__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_16__MUT_RATE_002__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_16__MUT_RATE_002__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_16__MUT_RATE_005__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_16__MUT_RATE_005__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

ENV_RESPONSES_16__MUT_RATE_0005__START=$((1+$TREATMENT_ID*$REPLICATES))
ENV_RESPONSES_16__MUT_RATE_0005__STOP=$(($TREATMENT_ID*$REPLICATES + $REPLICATES))
((TREATMENT_ID++))

##################################

if [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_2__MUT_RATE_001__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_2__MUT_RATE_001__STOP} ] ; then
# ENV_RESPONSES_2__MUT_RATE_001__START
TAG_MUT_RATE=0.001
NUM_SIGNAL_RESPONSES=2
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_2__MUT_RATE_002__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_2__MUT_RATE_002__STOP} ] ; then
# ENV_RESPONSES_2__MUT_RATE_002__START
TAG_MUT_RATE=0.002
NUM_SIGNAL_RESPONSES=2
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_2__MUT_RATE_005__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_2__MUT_RATE_005__STOP} ] ; then
# ENV_RESPONSES_2__MUT_RATE_005__START
TAG_MUT_RATE=0.005
NUM_SIGNAL_RESPONSES=2
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_2__MUT_RATE_0005__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_2__MUT_RATE_0005__STOP} ] ; then
# ENV_RESPONSES_2__MUT_RATE_0005__START
TAG_MUT_RATE=0.0005
NUM_SIGNAL_RESPONSES=2
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_4__MUT_RATE_001__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_4__MUT_RATE_001__STOP} ] ; then
# ENV_RESPONSES_4__MUT_RATE_001__START
TAG_MUT_RATE=0.001
NUM_SIGNAL_RESPONSES=4
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_4__MUT_RATE_002__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_4__MUT_RATE_002__STOP} ] ; then
# ENV_RESPONSES_4__MUT_RATE_002__START
TAG_MUT_RATE=0.002
NUM_SIGNAL_RESPONSES=4
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_4__MUT_RATE_005__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_4__MUT_RATE_005__STOP} ] ; then
# ENV_RESPONSES_4__MUT_RATE_005__START
TAG_MUT_RATE=0.005
NUM_SIGNAL_RESPONSES=4
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_4__MUT_RATE_0005__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_4__MUT_RATE_0005__STOP} ] ; then
# ENV_RESPONSES_4__MUT_RATE_0005__START
TAG_MUT_RATE=0.0005
NUM_SIGNAL_RESPONSES=4
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_8__MUT_RATE_001__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_8__MUT_RATE_001__STOP} ] ; then
# ENV_RESPONSES_8__MUT_RATE_001__START
TAG_MUT_RATE=0.001
NUM_SIGNAL_RESPONSES=8
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_8__MUT_RATE_002__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_8__MUT_RATE_002__STOP} ] ; then
# ENV_RESPONSES_8__MUT_RATE_002__START
TAG_MUT_RATE=0.002
NUM_SIGNAL_RESPONSES=8
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_8__MUT_RATE_005__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_8__MUT_RATE_005__STOP} ] ; then
# ENV_RESPONSES_8__MUT_RATE_005__START
TAG_MUT_RATE=0.005
NUM_SIGNAL_RESPONSES=8
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_8__MUT_RATE_0005__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_8__MUT_RATE_0005__STOP} ] ; then
# ENV_RESPONSES_8__MUT_RATE_0005__START
TAG_MUT_RATE=0.0005
NUM_SIGNAL_RESPONSES=8
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_16__MUT_RATE_001__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_16__MUT_RATE_001__STOP} ] ; then
# ENV_RESPONSES_16__MUT_RATE_001__START
TAG_MUT_RATE=0.001
NUM_SIGNAL_RESPONSES=16
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_16__MUT_RATE_002__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_16__MUT_RATE_002__STOP} ] ; then
# ENV_RESPONSES_16__MUT_RATE_002__START
TAG_MUT_RATE=0.002
NUM_SIGNAL_RESPONSES=16
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_16__MUT_RATE_005__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_16__MUT_RATE_005__STOP} ] ; then
# ENV_RESPONSES_16__MUT_RATE_005__START
TAG_MUT_RATE=0.005
NUM_SIGNAL_RESPONSES=16
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
elif [ ${SLURM_ARRAY_TASK_ID} -ge ${ENV_RESPONSES_16__MUT_RATE_0005__START} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${ENV_RESPONSES_16__MUT_RATE_0005__STOP} ] ; then
# ENV_RESPONSES_16__MUT_RATE_0005__START
TAG_MUT_RATE=0.0005
NUM_SIGNAL_RESPONSES=16
NUM_ENV_CYCLES=$(($ENV_CYCLES_PER_SIG_RESP*$NUM_SIGNAL_RESPONSES))
else
 echo "${SEED} from ${MATCH_METRIC} submission failed to launch >> ${DATA_DIR}/failed_to_launch.txt"
fi

##################################

MUT_RATE__INST_TAG_BF=${TAG_MUT_RATE}
MUT_RATE__FUNC_TAG_BF=${TAG_MUT_RATE}

RUN_NAME=RUN__MATCH_METRIC_${MATCH_METRIC}__NUM_SIGNAL_RESPONSES_${NUM_SIGNAL_RESPONSES}__NUM_ENV_CYCLES_${NUM_ENV_CYCLES}__TAG_MUT_RATE_${TAG_MUT_RATE}__SEED_${SEED}
RUN_DIR=${DATA_DIR}/${RUN_NAME}

module load GCC/9.1.0-2.32;

mkdir -p ${RUN_DIR}
cd ${RUN_DIR}
cp ${CONFIG_DIR}/config.cfg .
cp ${CONFIG_DIR}/${EXEC} .

echo "./${EXEC} -SEED ${SEED} -GENERATIONS ${GENERATIONS} -SUMMARY_RESOLUTION ${SUMMARY_RESOLUTION} -SNAPSHOT_RESOLUTION ${SNAPSHOT_RESOLUTION} -NUM_SIGNAL_RESPONSES ${NUM_SIGNAL_RESPONSES} -NUM_ENV_CYCLES ${NUM_ENV_CYCLES} -MUT_RATE__INST_TAG_BF ${MUT_RATE__INST_TAG_BF} -MUT_RATE__FUNC_TAG_BF ${MUT_RATE__FUNC_TAG_BF}" > ./cmd.txt
./${EXEC} -SEED ${SEED} -GENERATIONS ${GENERATIONS} -SUMMARY_RESOLUTION ${SUMMARY_RESOLUTION} -SNAPSHOT_RESOLUTION ${SNAPSHOT_RESOLUTION} -NUM_SIGNAL_RESPONSES ${NUM_SIGNAL_RESPONSES} -NUM_ENV_CYCLES ${NUM_ENV_CYCLES} -MUT_RATE__INST_TAG_BF ${MUT_RATE__INST_TAG_BF} -MUT_RATE__FUNC_TAG_BF ${MUT_RATE__FUNC_TAG_BF} > run.log

rm ./${EXEC}